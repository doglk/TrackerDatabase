import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Skeleton } from "@/components/ui/skeleton";
import { Users, CheckCircle2, XCircle } from "lucide-react";
import { isWithinInterval, parseISO } from "date-fns";

export default function TechnicianAvailability({ technicians, orders, isLoading }) {
  if (isLoading) {
    return (
      <Card className="shadow-lg border-0">
        <CardHeader>
          <Skeleton className="h-6 w-48" />
        </CardHeader>
        <CardContent className="space-y-4">
          {[1, 2, 3].map((i) => (
            <Skeleton key={i} className="h-16 w-full" />
          ))}
        </CardContent>
      </Card>
    );
  }

  const isTechnicianAvailable = (technicianId) => {
    const today = new Date();
    const activeOrders = orders.filter(o => {
      if (!o.assigned_technicians?.includes(technicianId) || o.status === 'abgeschlossen') {
        return false;
      }
      
      // Check if order has start_date and end_date
      if (!o.start_date || !o.end_date) {
        return false;
      }
      
      try {
        return isWithinInterval(today, {
          start: parseISO(o.start_date),
          end: parseISO(o.end_date)
        });
      } catch (e) {
        return false;
      }
    });
    return activeOrders.length === 0;
  };

  const activeTechnicians = technicians.filter(t => t.status === 'active');

  return (
    <Card className="shadow-lg border-0">
      <CardHeader className="border-b border-slate-100">
        <CardTitle className="text-xl font-bold text-slate-900 flex items-center gap-2">
          <Users className="w-5 h-5" />
          Techniker-Status
        </CardTitle>
      </CardHeader>
      <CardContent className="p-6">
        {activeTechnicians.length === 0 ? (
          <div className="text-center py-8">
            <p className="text-slate-500">Keine aktiven Techniker</p>
          </div>
        ) : (
          <div className="space-y-3">
            {activeTechnicians.map((tech) => {
              const available = isTechnicianAvailable(tech.id);
              return (
                <div
                  key={tech.id}
                  className="p-4 rounded-xl border border-slate-200 bg-white hover:shadow-md transition-all duration-200"
                >
                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-3">
                      <div className={`w-10 h-10 rounded-full flex items-center justify-center font-semibold text-white ${
                        available 
                          ? 'bg-gradient-to-br from-green-500 to-green-600' 
                          : 'bg-gradient-to-br from-orange-500 to-orange-600'
                      }`}>
                        {tech.name[0].toUpperCase()}
                      </div>
                      <div>
                        <p className="font-semibold text-slate-900">{tech.name}</p>
                        {tech.specialization && (
                          <p className="text-xs text-slate-500">{tech.specialization}</p>
                        )}
                      </div>
                    </div>
                    <Badge className={`${
                      available 
                        ? 'bg-green-100 text-green-800 border-green-200' 
                        : 'bg-orange-100 text-orange-800 border-orange-200'
                    } border flex items-center gap-1`}>
                      {available ? (
                        <>
                          <CheckCircle2 className="w-3 h-3" />
                          Verf√ºgbar
                        </>
                      ) : (
                        <>
                          <XCircle className="w-3 h-3" />
                          Im Einsatz
                        </>
                      )}
                    </Badge>
                  </div>
                </div>
              );
            })}
          </div>
        )}
      </CardContent>
    </Card>
  );
}